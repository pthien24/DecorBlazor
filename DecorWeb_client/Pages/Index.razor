@page "/"
@inject IProductService _productService
<AuthorizeView>
    <Authorized>
        <p>Welcome, @context.User.Identity.Name</p>

    </Authorized>
    <NotAuthorized>

        <p>not Sign in !</p>

    </NotAuthorized>
</AuthorizeView>
@if (IsProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
	</div>
}
else
{
	<!--/slider-->
	<section>
		<div class="container">
			<div class="row">
                <_CategoryComponent></_CategoryComponent>
				<div class="col-sm-9 padding-right">
					<div class="features_items">
						<!--features_items-->
						<h2 class="title text-center">Features Items</h2>

						
						@foreach (var product in Products)
						{
							<div class="col-sm-4">
								<div class="product-image-wrapper">
									<div class="single-products">
										<div class="productinfo text-center">
											<img src="@product.ImageUrl" alt="" />
											<h2>$56</h2>
											<p>Easy Polo Black Edition</p>
											<a href="/details/@product.ID" class="btn btn-default add-to-cart"><i class="fa fa-shopping-cart"></i>Add to cart</a>
										</div>
										<div class="product-overlay">
											<div class="overlay-content">
												<h2>$56</h2>
												<p>Easy Polo Black Edition</p>
												<a href="/details/@product.ID" class="btn btn-default add-to-cart"><i class="fa fa-shopping-cart"></i>Add to cart</a>
											</div>
										</div>
									</div>
									<div class="choose">
										<ul class="nav nav-pills nav-justified">
											<li><a href="#"><i class="fa fa-plus-square"></i>Add to wishlist</a></li>
											<li><a href="#"><i class="fa fa-plus-square"></i>Add to compare</a></li>
										</ul>
									</div>
								</div>
							</div>
						}
					</div><!--features_items-->

						<!--category-tab-->


				</div>
			</div>
		</div>
	</section>
   @*  <div class="container">
        <div class="row  pb-3 pt-3 backgroundWhite">
            @foreach (var category in Products.Select(u => u.Category.Name).Distinct())
            {
                <h2 class="text-success pl-1"><b>@category</b></h2>
                @foreach (var product in Products.Where(u => u.Category.Name == category))
                {
                    <div class="col-lg-4 col-md-6 pb-4 filter">
                        <div class="card bg-white rounded shadow-sm" style="border:1px solid #222">
                            <div class="card-body pb-1 row">
                                <div class="col-8 h5 name-limit">@product.Name</div>
                                <div class="col-4 text-end">
                                    <span class="text-info h4">
                                        @product.ProductPrices.OrderBy(u=>u.Price).FirstOrDefault()?.Price.ToString("c")
                                    </span>
                                </div>
                            </div>

                            <img class="card-img-top img-fluid d-block mx-auto mb-3" src="@product.ImageUrl" alt="menuitem image">
                            <div class="card-body p-1 px-3 row">
                                <div class="col-6">
                                    <span class="badge p-2 border w-100 text-dark bg-warning ">@product.Category.Name</span>
                                </div>
                                <div class="col-6 border-0">
                                    <span class="badge p-2 border w-100 bg-info ">@product.Color</span>
                                </div>
                                <div class="col-12 pt-2 description-limit" style=" font-size:13px; text-align:justify">
                                    <p>@((MarkupString)(product.Description))</p>
                                </div>
                                <div class="col-12 p-1">
                                    <a href="/details/@product.ID" class="btn btn-dark form-control btn-sm p-2" style="height:40px">View Details</a>
                                </div>
                            </div>
                        </div>
                    </div>

                }
                }
        </div>
    </div> *@
}

@code {
    public bool IsProcessing { get; set; } = false;
    public IEnumerable<ProductDTO> Products { get; set; } = new List<ProductDTO>();


    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        Products = await _productService.GetAll();
        IsProcessing = false;
    }

    public string LimitDescription(string description, int maxLength = 100)
    {
        if (description.Length > maxLength)
        {
            return description.Substring(0, maxLength) + "...";
        }
        return description;
    }
}