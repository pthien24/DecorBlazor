@page "/details/{ProductID:int}"
@inject IProductService _productService
@inject ICartService _cartService
@inject IJSRuntime _js
@if (IsProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
    </div>
}
else
{
	<section>
		<div class="container">
			<div class="row">
                <_CategoryComponent></_CategoryComponent>
				<div class="col-sm-9 padding-right">
                    <EditForm OnValidSubmit="AddToCart" Model="DetailsVM" method="post">
                    <DataAnnotationsValidator />
                        <div class="col-sm-9 padding-right">
                            <div class="product-details">
                                <!--product-details-->
                                <div class="col-sm-5">
                                    <div class="view-product">
                                        <img src="@Product.ImageUrl" alt="" />
                                        <h3>ZOOM</h3>
                                    </div>
                                </div>
                                <div class="col-sm-7">
                                    <div class="product-information">
                                        <!--/product-information-->
                                        <h2>@Product.Name</h2>
                                        <p>Web ID: 1089772</p>
                                        <div class="product-prices-row">
                                            @foreach (var productPrice in Product.ProductPrices)
                                            {
                                                if (productPrice.ID == DetailsVM.SelectedProductPriceID)
                                                {
                                                    <div class="product-price selected">
                                                        <p>@productPrice.Size</p>
                                                        <p>@productPrice.Price.ToString("c")</p>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="product-price"
                                                         @onclick="(agrs) =>SelectProductPrice(agrs,productPrice.ID)">
                                                        <p>@productPrice.Size</p>
                                                        <p>@productPrice.Price.ToString("c")</p>
                                                    </div>
                                                }
                                            }
                                        </div>
                                        @if (!Product.ProductPrices.Any())
                                        {
                                            <p class="text-warning">No Size available yet...</p>
                                        }
                                        else
                                        {
                                            <div class="col-2 text-primary"><h4>Count</h4></div>
                                            <div>
                                                <InputNumber @bind-Value="DetailsVM.Count" class="form-control" />
                                                <Microsoft.AspNetCore.Components.Forms.ValidationMessage For="()=>DetailsVM.Count" />

                                            </div>
                                        }
                                        @if (DetailsVM.SelectedProductPriceID > 0)
                                        {

                                            <button type="submit" value="Add to Cart" class="btn btn-primary form-control"><i class="fa fa-shopping-cart"></i> Add to Cart</button>

                                        }
                                        else
                                        {
                                            <button type="submit" value="Add to Cart" disabled class="btn btn-primary form-control">Add to Cart</button>

                                        }
                                        <p><b>Availability:</b> In Stock</p>
                                        <p><b>Condition:</b> New</p>
                                        <p><b>Brand:</b> E-SHOPPER</p>
                                        <a href=""><img src="images/product-details/share.png" class="share img-responsive" alt="" /></a>
                                    </div>
                                    



                                
                                
                            </div><!--/product-information-->
                            </div>
                        </div>

                    </EditForm>>
							</div><!--/product-details-->
						</div>

						
					<!--category-tab-->


			</div>
	</section>

	<style>
		.product-prices-row {
			display: flex;
			flex-wrap: wrap;
			gap: 10px;
		}

		.product-price {
			border: 1px solid;
			border-radius: 10px;
			box-shadow: 5px 5px 10px #ccc;
			padding: 5px;
			width: 100px; /* Set a fixed width */
			text-align: center;
		}

			.product-price.selected {
				border: 3px solid #28A745;
			}

			.product-price p {
				margin: 5px 0; /* Reduce margin for text */
				font-size: 14px; /* Adjust font size as needed */
			}
	</style>
}
@code {
    [Parameter]
    public int ProductID { get; set; }
    public ProductDTO Product { get; set; } = new ProductDTO();
    public bool IsProcessing { get; set; } = false;
    public DetailsVM DetailsVM { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        Product = await _productService.Get(ProductID);
        IsProcessing = false;
    }
    private async Task SelectProductPrice(MouseEventArgs e,int producPriceID)
    {
        DetailsVM.SelectedProductPriceID = producPriceID;
        DetailsVM.ProductPrice = Product.ProductPrices.FirstOrDefault(u => u.ID == producPriceID);
    }
    private async Task AddToCart()
    {
        ShoppingCart shoppingCart = new()
            {
                Count = DetailsVM.Count,
                ProductId = ProductID,
                ProductPriceId = DetailsVM.SelectedProductPriceID
            };
        await _cartService.IncrementCart(shoppingCart);
        await _js.ToastrSuccess(" select jpg jpeg png");
    }
}
