 @page "/cart"
@inject IProductService _productService
@inject ICartService _cartService
@inject ILocalStorageService _storage
@if (IsProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
    </div>
}
else
{
    @if (ShoppingCart.Count == 0)
{
    <div>
        Giỏ hàng đang trống.
    </div>
}
    else
    {

        <section id="cart_items">
            <div class="container">
                <div class="breadcrumbs">
                    <ol class="breadcrumb">
                        <li><a href="#">Home</a></li>
                        <li class="active">Shopping Cart</li>
                    </ol>
                </div>
                <div class="table-responsive cart_info">
                    <table class="table table-condensed">
                        <thead>
                            <tr class="cart_menu">
                                <td class="image">Item</td>
                                <td class="description"></td>
                                <td class="price">Price</td>
                                <td class="quantity">Quantity</td>
                                <td class="total">Total</td>
                                <td></td>
                            </tr>
                        </thead>
                        <tbody>
                            
                            @foreach (var item in ShoppingCart)
                            {

                                <tr>
                                    <td class="col-3 col-md-1 text-center py-2">
                                        <img src="@item.Product.ImageUrl" class="rounded" width="100%" />
                                    </td>
                                    <td class="cart_description">
                                        <h4><a href="">@item.Product.Name</a></h4>
                                    </td>
                                    <td class="cart_price">
                                        <h6><strong>@item.ProductPrice.Price.ToString("c") <span class="text-muted">x</span>@item.Count </strong></h6>
                                    </td>
                                    <td class="cart_quantity">
                                        <div class="cart_quantity_button">
                                            <button class="cart_quantity_up" type="submit" @onclick="()=>Increment(item.ProductId,item.ProductPriceId,1)"> + </button>
                                            <button class="cart_quantity_down" type="submit" @onclick="()=>Decrement(item.ProductId,item.ProductPriceId,1)"> - </button>
                                        </div>
                                    </td>
                                    <td class="cart_total">
                                        <p class="cart_total_price">@OrderTotal.ToString("c")</p>
                                    </td>
                                    <td class="cart_quantity">
                                        <div class="cart_quantity_button">
                                            <button class="cart_quantity_down" type="submit" @onclick="()=>Decrement(item.ProductId,item.ProductPriceId,0)"> X </button>
                                        </div>

                                    </td>
                                </tr>

                            }
                            
                        </tbody>
                    </table>
                </div>
            </div>
        </section> <!--/#cart_items-->
        <section id="do_action">
            <div class="container">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="total_area">
                            <ul>
                                <li>Cart Sub Total <span>$59</span></li>
                                <li>Eco Tax <span>$2</span></li>
                                <li>Shipping Cost <span>Free</span></li>
                                <li>Total <span>$61</span></li>
                            </ul>
                            <a class="btn btn-default update" href="/summary">Update</a>
                            <a class="btn btn-default check_out" href="/summary">Check Out</a>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!--/#do_action-->
    }

}

@code {
    public bool IsProcessing { get; set; } = false;
    public IEnumerable<ProductDTO> Products { get; set; }
    private List<ShoppingCart> ShoppingCart = new List<ShoppingCart>();
    private double OrderTotal { get; set; } = 0;
    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        Products = await _productService.GetAll();
        await LoadData();
        IsProcessing = false;
    }
    private async Task LoadData()
    {
        OrderTotal = 0;
        ShoppingCart = await _storage.GetItemAsync<List<ShoppingCart>>(SD.ShoppingCart);
        foreach (var cart in ShoppingCart)
        {
            cart.Product = Products.FirstOrDefault(u => u.ID == cart.ProductId);
            cart.ProductPrice = cart.Product.ProductPrices.FirstOrDefault(u => u.ID == cart.ProductPriceId);
            OrderTotal += (cart.ProductPrice.Price * cart.Count);
        }
    }
    private async Task Increment(int productid, int productpriceId, int count)
    {
        if (ShoppingCart == null) return;
        await _cartService.IncrementCart(new()
            {
                Count = count,
                ProductId = productid,
                ProductPriceId = productpriceId
            });
            await LoadData();

    }
    private async Task Decrement(int productid, int productpriceId, int count)
    {
        if (ShoppingCart == null) return;
        await _cartService.DecrementCart(new()
            {
                Count = count,
                ProductId = productid,
                ProductPriceId = productpriceId
            });
        await LoadData();

    }
}
